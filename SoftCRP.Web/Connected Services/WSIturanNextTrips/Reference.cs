//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSIturanNextTrips
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSIturanNextTrips.ManagedServicesSoap")]
    public interface ManagedServicesSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNextEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextEventsResponse> GetNextEventsAsync(WSIturanNextTrips.GetNextEventsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNextOnlineMsgs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextOnlineMsgsResponse> GetNextOnlineMsgsAsync(WSIturanNextTrips.GetNextOnlineMsgsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNextTripsRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextTripsRecordsResponse> GetNextTripsRecordsAsync(WSIturanNextTrips.GetNextTripsRecordsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNextRegionEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextRegionEventsResponse> GetNextRegionEventsAsync(WSIturanNextTrips.GetNextRegionEventsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRouteAndDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetRouteAndDetailsResponse> GetRouteAndDetailsAsync(WSIturanNextTrips.GetRouteAndDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Authenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> AuthenticateAsync(string Username, string Password, string CompanyName);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoginInfo
    {
        
        private string usernameField;
        
        private string passwordField;
        
        private string companyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Company
        {
            get
            {
                return this.companyField;
            }
            set
            {
                this.companyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextEvents", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextEventsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WSIturanNextTrips.LoginInfo LoginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long LastTripID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string DeviceID;
        
        public GetNextEventsRequest()
        {
        }
        
        public GetNextEventsRequest(WSIturanNextTrips.LoginInfo LoginInfo, long LastTripID, string DeviceID)
        {
            this.LoginInfo = LoginInfo;
            this.LastTripID = LastTripID;
            this.DeviceID = DeviceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextEventsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextEventsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetNextEventsResult;
        
        public GetNextEventsResponse()
        {
        }
        
        public GetNextEventsResponse(string GetNextEventsResult)
        {
            this.GetNextEventsResult = GetNextEventsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextOnlineMsgs", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextOnlineMsgsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WSIturanNextTrips.LoginInfo LoginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long LastMsgID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string DeviceID;
        
        public GetNextOnlineMsgsRequest()
        {
        }
        
        public GetNextOnlineMsgsRequest(WSIturanNextTrips.LoginInfo LoginInfo, long LastMsgID, string DeviceID)
        {
            this.LoginInfo = LoginInfo;
            this.LastMsgID = LastMsgID;
            this.DeviceID = DeviceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextOnlineMsgsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextOnlineMsgsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetNextOnlineMsgsResult;
        
        public GetNextOnlineMsgsResponse()
        {
        }
        
        public GetNextOnlineMsgsResponse(string GetNextOnlineMsgsResult)
        {
            this.GetNextOnlineMsgsResult = GetNextOnlineMsgsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextTripsRecords", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextTripsRecordsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WSIturanNextTrips.LoginInfo LoginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long LastRecordID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int MaxRecords;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string DeviceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime StartDate;
        
        public GetNextTripsRecordsRequest()
        {
        }
        
        public GetNextTripsRecordsRequest(WSIturanNextTrips.LoginInfo LoginInfo, long LastRecordID, int MaxRecords, string DeviceID, System.DateTime StartDate)
        {
            this.LoginInfo = LoginInfo;
            this.LastRecordID = LastRecordID;
            this.MaxRecords = MaxRecords;
            this.DeviceID = DeviceID;
            this.StartDate = StartDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextTripsRecordsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextTripsRecordsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetNextTripsRecordsResult;
        
        public GetNextTripsRecordsResponse()
        {
        }
        
        public GetNextTripsRecordsResponse(string GetNextTripsRecordsResult)
        {
            this.GetNextTripsRecordsResult = GetNextTripsRecordsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextRegionEvents", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextRegionEventsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WSIturanNextTrips.LoginInfo LoginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long LastTripID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int MaxRecords;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string DeviceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime StartDate;
        
        public GetNextRegionEventsRequest()
        {
        }
        
        public GetNextRegionEventsRequest(WSIturanNextTrips.LoginInfo LoginInfo, long LastTripID, int MaxRecords, string DeviceID, System.DateTime StartDate)
        {
            this.LoginInfo = LoginInfo;
            this.LastTripID = LastTripID;
            this.MaxRecords = MaxRecords;
            this.DeviceID = DeviceID;
            this.StartDate = StartDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextRegionEventsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNextRegionEventsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetNextRegionEventsResult;
        
        public GetNextRegionEventsResponse()
        {
        }
        
        public GetNextRegionEventsResponse(string GetNextRegionEventsResult)
        {
            this.GetNextRegionEventsResult = GetNextRegionEventsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRouteAndDetails", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRouteAndDetailsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WSIturanNextTrips.LoginInfo LoginInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string DeviceID;
        
        public GetRouteAndDetailsRequest()
        {
        }
        
        public GetRouteAndDetailsRequest(WSIturanNextTrips.LoginInfo LoginInfo, string StartTime, string EndTime, string DeviceID)
        {
            this.LoginInfo = LoginInfo;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.DeviceID = DeviceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRouteAndDetailsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRouteAndDetailsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetRouteAndDetailsResult;
        
        public GetRouteAndDetailsResponse()
        {
        }
        
        public GetRouteAndDetailsResponse(string GetRouteAndDetailsResult)
        {
            this.GetRouteAndDetailsResult = GetRouteAndDetailsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ManagedServicesSoapChannel : WSIturanNextTrips.ManagedServicesSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ManagedServicesSoapClient : System.ServiceModel.ClientBase<WSIturanNextTrips.ManagedServicesSoap>, WSIturanNextTrips.ManagedServicesSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ManagedServicesSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ManagedServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), ManagedServicesSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ManagedServicesSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ManagedServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ManagedServicesSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ManagedServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ManagedServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextEventsResponse> WSIturanNextTrips.ManagedServicesSoap.GetNextEventsAsync(WSIturanNextTrips.GetNextEventsRequest request)
        {
            return base.Channel.GetNextEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSIturanNextTrips.GetNextEventsResponse> GetNextEventsAsync(WSIturanNextTrips.LoginInfo LoginInfo, long LastTripID, string DeviceID)
        {
            WSIturanNextTrips.GetNextEventsRequest inValue = new WSIturanNextTrips.GetNextEventsRequest();
            inValue.LoginInfo = LoginInfo;
            inValue.LastTripID = LastTripID;
            inValue.DeviceID = DeviceID;
            return ((WSIturanNextTrips.ManagedServicesSoap)(this)).GetNextEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextOnlineMsgsResponse> WSIturanNextTrips.ManagedServicesSoap.GetNextOnlineMsgsAsync(WSIturanNextTrips.GetNextOnlineMsgsRequest request)
        {
            return base.Channel.GetNextOnlineMsgsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSIturanNextTrips.GetNextOnlineMsgsResponse> GetNextOnlineMsgsAsync(WSIturanNextTrips.LoginInfo LoginInfo, long LastMsgID, string DeviceID)
        {
            WSIturanNextTrips.GetNextOnlineMsgsRequest inValue = new WSIturanNextTrips.GetNextOnlineMsgsRequest();
            inValue.LoginInfo = LoginInfo;
            inValue.LastMsgID = LastMsgID;
            inValue.DeviceID = DeviceID;
            return ((WSIturanNextTrips.ManagedServicesSoap)(this)).GetNextOnlineMsgsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextTripsRecordsResponse> WSIturanNextTrips.ManagedServicesSoap.GetNextTripsRecordsAsync(WSIturanNextTrips.GetNextTripsRecordsRequest request)
        {
            return base.Channel.GetNextTripsRecordsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSIturanNextTrips.GetNextTripsRecordsResponse> GetNextTripsRecordsAsync(WSIturanNextTrips.LoginInfo LoginInfo, long LastRecordID, int MaxRecords, string DeviceID, System.DateTime StartDate)
        {
            WSIturanNextTrips.GetNextTripsRecordsRequest inValue = new WSIturanNextTrips.GetNextTripsRecordsRequest();
            inValue.LoginInfo = LoginInfo;
            inValue.LastRecordID = LastRecordID;
            inValue.MaxRecords = MaxRecords;
            inValue.DeviceID = DeviceID;
            inValue.StartDate = StartDate;
            return ((WSIturanNextTrips.ManagedServicesSoap)(this)).GetNextTripsRecordsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetNextRegionEventsResponse> WSIturanNextTrips.ManagedServicesSoap.GetNextRegionEventsAsync(WSIturanNextTrips.GetNextRegionEventsRequest request)
        {
            return base.Channel.GetNextRegionEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSIturanNextTrips.GetNextRegionEventsResponse> GetNextRegionEventsAsync(WSIturanNextTrips.LoginInfo LoginInfo, long LastTripID, int MaxRecords, string DeviceID, System.DateTime StartDate)
        {
            WSIturanNextTrips.GetNextRegionEventsRequest inValue = new WSIturanNextTrips.GetNextRegionEventsRequest();
            inValue.LoginInfo = LoginInfo;
            inValue.LastTripID = LastTripID;
            inValue.MaxRecords = MaxRecords;
            inValue.DeviceID = DeviceID;
            inValue.StartDate = StartDate;
            return ((WSIturanNextTrips.ManagedServicesSoap)(this)).GetNextRegionEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSIturanNextTrips.GetRouteAndDetailsResponse> WSIturanNextTrips.ManagedServicesSoap.GetRouteAndDetailsAsync(WSIturanNextTrips.GetRouteAndDetailsRequest request)
        {
            return base.Channel.GetRouteAndDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSIturanNextTrips.GetRouteAndDetailsResponse> GetRouteAndDetailsAsync(WSIturanNextTrips.LoginInfo LoginInfo, string StartTime, string EndTime, string DeviceID)
        {
            WSIturanNextTrips.GetRouteAndDetailsRequest inValue = new WSIturanNextTrips.GetRouteAndDetailsRequest();
            inValue.LoginInfo = LoginInfo;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.DeviceID = DeviceID;
            return ((WSIturanNextTrips.ManagedServicesSoap)(this)).GetRouteAndDetailsAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateAsync(string Username, string Password, string CompanyName)
        {
            return base.Channel.AuthenticateAsync(Username, Password, CompanyName);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ManagedServicesSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ManagedServicesSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ManagedServicesSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://www.worldfleetlog.com/WebFleetStationServices/ManagedServices.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ManagedServicesSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://www.worldfleetlog.com/WebFleetStationServices/ManagedServices.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ManagedServicesSoap,
            
            ManagedServicesSoap12,
        }
    }
}
