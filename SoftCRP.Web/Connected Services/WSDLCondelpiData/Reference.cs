//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSDLCondelpiData
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSDLCondelpiData.Service1Soap")]
    public interface Service1Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DENCP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DENCPAsync(string key, string campo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ENCP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ENCPAsync(string key, string campo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataNw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwAsync(string key, string identidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_modelo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_modeloAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataNwLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwLoginAsync(string key, string identidad, string grupo, int orden);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ACTULIZARINFONW", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ACTULIZARINFONWAsync(string key, string GRUPO, int ORDEN, string CEDULA, string NOMBRE, string TELEFONO, string TELEFONO1, string CELULAR, string CALLE_PRIN, string NUMERO, string CALLE_SEC, string CIUDAD, string EMAIL, string IP_CLIENTE, System.DateTime FECHA_ACT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CotizadorApc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> CotizadorApcAsync(
                    string key, 
                    string NOMBRE1, 
                    string NOMBRE2, 
                    string APELLIDO1, 
                    string APELLIDO2, 
                    string CEDULA, 
                    string TELEFONO, 
                    string MAIL, 
                    System.DateTime FECHA_REGISTRO, 
                    int TIPCLI_CODIGO, 
                    int ID_PLAN, 
                    int Monto, 
                    int REFERIDO, 
                    string RELACION_REF, 
                    int COD_REGIONAL, 
                    int CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Referidosapp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ReferidosappAsync(
                    string key, 
                    string NOMBRE1, 
                    string NOMBRE2, 
                    string APELLIDO1, 
                    string APELLIDO2, 
                    string CEDULA, 
                    string TELEFONO, 
                    string MAIL, 
                    System.DateTime FECHA_REGISTRO, 
                    int TIPCLI_CODIGO, 
                    int ID_PLAN, 
                    int Monto, 
                    int REFERIDO, 
                    string RELACION_REF, 
                    int COD_REGIONAL, 
                    int CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CotizadorApc_LAND", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> CotizadorApc_LANDAsync(
                    string key, 
                    string NOMBRE1, 
                    string NOMBRE2, 
                    string APELLIDO1, 
                    string APELLIDO2, 
                    string CEDULA, 
                    string TELEFONO, 
                    string MAIL, 
                    System.DateTime FECHA_REGISTRO, 
                    string TIPCLI_CODIGO, 
                    string ID_PLAN, 
                    string Monto, 
                    string REFERIDO, 
                    string RELACION_REF, 
                    string COD_REGIONAL, 
                    string CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LOG_LOGIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> LOG_LOGINAsync(string key, string Aplicacion, string Usuario, string Equipo, string Tipo, string Descripcion, int error);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registroAPP_clientes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_clientesAsync(string key, string DOCUMENTO, string CODIGO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registroAPP_client_max", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_client_maxAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Boton_Pagos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Boton_PagosAsync(string key, string CEDULA, string CODIGO_PAGO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Boton_Pagos_APP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Boton_Pagos_APPAsync(string key, string CEDULA, string CODIGO_PAGO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registroAPP_consulta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_consultaAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getnewconfull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.GetnewconfullResponse> GetnewconfullAsync(WSDLCondelpiData.GetnewconfullRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registroAPP_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_userAsync(string key, string DOCUMENTO, string TIPO, string NOMBRE, string APELLIDO, string CIUDAD, string EMAIL, string TELEFONO, string CODIGO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Comision_user", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Comision_userAsync(string key, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Validacion_user_apc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Validacion_user_apcAsync(string key, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Inserta_Prospectos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Inserta_ProspectosAsync(string key, float CODIGO, string NOMBRE1, string APELLIDO1, string CEDULA, string TIPODOCU, string MAIL, string TELEFONO, string BUSSINES_ADVISOR, string ESTABLIS_TYPE_ID, float MONTO, string FUENTE, string OS, string ESTABLIS_NAME, int USER_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Inserta_Prospectos_APP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Inserta_Prospectos_APPAsync(string key, float CODIGO, string NOMBRE1, string APELLIDO1, string CEDULA, string TIPODOCU, string MAIL, string TELEFONO, string BUSSINES_ADVISOR, string ESTABLIS_TYPE_ID, float MONTO, string FUENTE, string OS, string ESTABLIS_NAME, int USER_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Estado_Prospecto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Estado_ProspectoAsync(string key, string id, string CODIGOCONS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Cantidad_Facturada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Cantidad_FacturadaAsync(string key, int ID, string TIPO, string DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataNwAdjudicacio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwAdjudicacioAsync(string key, string identidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataNwAdjudicacio_G_O_V", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwAdjudicacio_G_O_VAsync(string key, string identidad, string GRUPO, string ORDEN, string VERSION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataNwLoginPRO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwLoginPROAsync(string key, string identidad, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Establecimiento_Punto_VENTA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Establecimiento_Punto_VENTAAsync(string key, int CODIGO, string NOMBRE, string TIPO, string DIRECCION, string TELEFONO, string REPRESENTANTE_LEGAL, string CONTACTO, string CODE, int TIPO_ESTABL, string RUC_ESTABL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Call_Whapp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Call_WhappAsync(string key, string numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_prov", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_provAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_PICKUP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_PICKUPAsync(string key, string fecha, string fecha1, string pickup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_Placa", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_PlacaAsync(string key, string Placa, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_Placa_f", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_Placa_fAsync(string key, string Placa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_auto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_autoAsync(string key, string Placa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_Data_nit_auto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_nit_autoAsync(string key, string NIT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Consulta_clientes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_clientesAsync(string key, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ingreso_Incidencias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> Ingreso_IncidenciasAsync(string key, string Placa, int submotivo, string Observacion, string usuario, string usuario_solucion, string motivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Responsable_sla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Responsable_slaAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Tipo_incidencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Tipo_incidenciaAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Via_Ingreso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Via_IngresoAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Estado_incidencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Estado_incidenciaAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_consulta_total", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Get_consulta_totalAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_GPS_PLACA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_GPS_PLACAAsync(string key, string placa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING1Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING2Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING3Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING4Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING5Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING6Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING7Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING8", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING8Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING9", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING9Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING10", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING10Async(string key, string placa, string ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_RENTING11", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING11Async(string key, string placa, string ruc);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class ArrayOfDataTableDataTable
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Getnewconfull", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetnewconfullRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string key;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string cedula;
        
        public GetnewconfullRequest()
        {
        }
        
        public GetnewconfullRequest(string key, string cedula)
        {
            this.key = key;
            this.cedula = cedula;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetnewconfullResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetnewconfullResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DataTable")]
        public WSDLCondelpiData.ArrayOfDataTableDataTable[] GetnewconfullResult;
        
        public GetnewconfullResponse()
        {
        }
        
        public GetnewconfullResponse(WSDLCondelpiData.ArrayOfDataTableDataTable[] GetnewconfullResult)
        {
            this.GetnewconfullResult = GetnewconfullResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface Service1SoapChannel : WSDLCondelpiData.Service1Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<WSDLCondelpiData.Service1Soap>, WSDLCondelpiData.Service1Soap
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(Service1SoapClient.GetBindingForEndpoint(endpointConfiguration), Service1SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> DENCPAsync(string key, string campo)
        {
            return base.Channel.DENCPAsync(key, campo);
        }
        
        public System.Threading.Tasks.Task<string> ENCPAsync(string key, string campo)
        {
            return base.Channel.ENCPAsync(key, campo);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwAsync(string key, string identidad)
        {
            return base.Channel.GetDataNwAsync(key, identidad);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_modeloAsync(string key)
        {
            return base.Channel.Consulta_Data_modeloAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwLoginAsync(string key, string identidad, string grupo, int orden)
        {
            return base.Channel.GetDataNwLoginAsync(key, identidad, grupo, orden);
        }
        
        public System.Threading.Tasks.Task<bool> ACTULIZARINFONWAsync(string key, string GRUPO, int ORDEN, string CEDULA, string NOMBRE, string TELEFONO, string TELEFONO1, string CELULAR, string CALLE_PRIN, string NUMERO, string CALLE_SEC, string CIUDAD, string EMAIL, string IP_CLIENTE, System.DateTime FECHA_ACT)
        {
            return base.Channel.ACTULIZARINFONWAsync(key, GRUPO, ORDEN, CEDULA, NOMBRE, TELEFONO, TELEFONO1, CELULAR, CALLE_PRIN, NUMERO, CALLE_SEC, CIUDAD, EMAIL, IP_CLIENTE, FECHA_ACT);
        }
        
        public System.Threading.Tasks.Task<bool> CotizadorApcAsync(
                    string key, 
                    string NOMBRE1, 
                    string NOMBRE2, 
                    string APELLIDO1, 
                    string APELLIDO2, 
                    string CEDULA, 
                    string TELEFONO, 
                    string MAIL, 
                    System.DateTime FECHA_REGISTRO, 
                    int TIPCLI_CODIGO, 
                    int ID_PLAN, 
                    int Monto, 
                    int REFERIDO, 
                    string RELACION_REF, 
                    int COD_REGIONAL, 
                    int CODE)
        {
            return base.Channel.CotizadorApcAsync(key, NOMBRE1, NOMBRE2, APELLIDO1, APELLIDO2, CEDULA, TELEFONO, MAIL, FECHA_REGISTRO, TIPCLI_CODIGO, ID_PLAN, Monto, REFERIDO, RELACION_REF, COD_REGIONAL, CODE);
        }
        
        public System.Threading.Tasks.Task<bool> ReferidosappAsync(
                    string key, 
                    string NOMBRE1, 
                    string NOMBRE2, 
                    string APELLIDO1, 
                    string APELLIDO2, 
                    string CEDULA, 
                    string TELEFONO, 
                    string MAIL, 
                    System.DateTime FECHA_REGISTRO, 
                    int TIPCLI_CODIGO, 
                    int ID_PLAN, 
                    int Monto, 
                    int REFERIDO, 
                    string RELACION_REF, 
                    int COD_REGIONAL, 
                    int CODE)
        {
            return base.Channel.ReferidosappAsync(key, NOMBRE1, NOMBRE2, APELLIDO1, APELLIDO2, CEDULA, TELEFONO, MAIL, FECHA_REGISTRO, TIPCLI_CODIGO, ID_PLAN, Monto, REFERIDO, RELACION_REF, COD_REGIONAL, CODE);
        }
        
        public System.Threading.Tasks.Task<bool> CotizadorApc_LANDAsync(
                    string key, 
                    string NOMBRE1, 
                    string NOMBRE2, 
                    string APELLIDO1, 
                    string APELLIDO2, 
                    string CEDULA, 
                    string TELEFONO, 
                    string MAIL, 
                    System.DateTime FECHA_REGISTRO, 
                    string TIPCLI_CODIGO, 
                    string ID_PLAN, 
                    string Monto, 
                    string REFERIDO, 
                    string RELACION_REF, 
                    string COD_REGIONAL, 
                    string CODE)
        {
            return base.Channel.CotizadorApc_LANDAsync(key, NOMBRE1, NOMBRE2, APELLIDO1, APELLIDO2, CEDULA, TELEFONO, MAIL, FECHA_REGISTRO, TIPCLI_CODIGO, ID_PLAN, Monto, REFERIDO, RELACION_REF, COD_REGIONAL, CODE);
        }
        
        public System.Threading.Tasks.Task<bool> LOG_LOGINAsync(string key, string Aplicacion, string Usuario, string Equipo, string Tipo, string Descripcion, int error)
        {
            return base.Channel.LOG_LOGINAsync(key, Aplicacion, Usuario, Equipo, Tipo, Descripcion, error);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_clientesAsync(string key, string DOCUMENTO, string CODIGO)
        {
            return base.Channel.registroAPP_clientesAsync(key, DOCUMENTO, CODIGO);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_client_maxAsync(string key)
        {
            return base.Channel.registroAPP_client_maxAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Boton_PagosAsync(string key, string CEDULA, string CODIGO_PAGO)
        {
            return base.Channel.Boton_PagosAsync(key, CEDULA, CODIGO_PAGO);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Boton_Pagos_APPAsync(string key, string CEDULA, string CODIGO_PAGO)
        {
            return base.Channel.Boton_Pagos_APPAsync(key, CEDULA, CODIGO_PAGO);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_consultaAsync(string key)
        {
            return base.Channel.registroAPP_consultaAsync(key);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSDLCondelpiData.GetnewconfullResponse> WSDLCondelpiData.Service1Soap.GetnewconfullAsync(WSDLCondelpiData.GetnewconfullRequest request)
        {
            return base.Channel.GetnewconfullAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.GetnewconfullResponse> GetnewconfullAsync(string key, string cedula)
        {
            WSDLCondelpiData.GetnewconfullRequest inValue = new WSDLCondelpiData.GetnewconfullRequest();
            inValue.key = key;
            inValue.cedula = cedula;
            return ((WSDLCondelpiData.Service1Soap)(this)).GetnewconfullAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> registroAPP_userAsync(string key, string DOCUMENTO, string TIPO, string NOMBRE, string APELLIDO, string CIUDAD, string EMAIL, string TELEFONO, string CODIGO)
        {
            return base.Channel.registroAPP_userAsync(key, DOCUMENTO, TIPO, NOMBRE, APELLIDO, CIUDAD, EMAIL, TELEFONO, CODIGO);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Comision_userAsync(string key, string id)
        {
            return base.Channel.Comision_userAsync(key, id);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Validacion_user_apcAsync(string key, string cedula)
        {
            return base.Channel.Validacion_user_apcAsync(key, cedula);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Inserta_ProspectosAsync(string key, float CODIGO, string NOMBRE1, string APELLIDO1, string CEDULA, string TIPODOCU, string MAIL, string TELEFONO, string BUSSINES_ADVISOR, string ESTABLIS_TYPE_ID, float MONTO, string FUENTE, string OS, string ESTABLIS_NAME, int USER_CODE)
        {
            return base.Channel.Inserta_ProspectosAsync(key, CODIGO, NOMBRE1, APELLIDO1, CEDULA, TIPODOCU, MAIL, TELEFONO, BUSSINES_ADVISOR, ESTABLIS_TYPE_ID, MONTO, FUENTE, OS, ESTABLIS_NAME, USER_CODE);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Inserta_Prospectos_APPAsync(string key, float CODIGO, string NOMBRE1, string APELLIDO1, string CEDULA, string TIPODOCU, string MAIL, string TELEFONO, string BUSSINES_ADVISOR, string ESTABLIS_TYPE_ID, float MONTO, string FUENTE, string OS, string ESTABLIS_NAME, int USER_CODE)
        {
            return base.Channel.Inserta_Prospectos_APPAsync(key, CODIGO, NOMBRE1, APELLIDO1, CEDULA, TIPODOCU, MAIL, TELEFONO, BUSSINES_ADVISOR, ESTABLIS_TYPE_ID, MONTO, FUENTE, OS, ESTABLIS_NAME, USER_CODE);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Estado_ProspectoAsync(string key, string id, string CODIGOCONS)
        {
            return base.Channel.Estado_ProspectoAsync(key, id, CODIGOCONS);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Cantidad_FacturadaAsync(string key, int ID, string TIPO, string DATE)
        {
            return base.Channel.Cantidad_FacturadaAsync(key, ID, TIPO, DATE);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwAdjudicacioAsync(string key, string identidad)
        {
            return base.Channel.GetDataNwAdjudicacioAsync(key, identidad);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwAdjudicacio_G_O_VAsync(string key, string identidad, string GRUPO, string ORDEN, string VERSION)
        {
            return base.Channel.GetDataNwAdjudicacio_G_O_VAsync(key, identidad, GRUPO, ORDEN, VERSION);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> GetDataNwLoginPROAsync(string key, string identidad, string correo)
        {
            return base.Channel.GetDataNwLoginPROAsync(key, identidad, correo);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Establecimiento_Punto_VENTAAsync(string key, int CODIGO, string NOMBRE, string TIPO, string DIRECCION, string TELEFONO, string REPRESENTANTE_LEGAL, string CONTACTO, string CODE, int TIPO_ESTABL, string RUC_ESTABL)
        {
            return base.Channel.Establecimiento_Punto_VENTAAsync(key, CODIGO, NOMBRE, TIPO, DIRECCION, TELEFONO, REPRESENTANTE_LEGAL, CONTACTO, CODE, TIPO_ESTABL, RUC_ESTABL);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Call_WhappAsync(string key, string numero)
        {
            return base.Channel.Consulta_Call_WhappAsync(key, numero);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_provAsync(string key)
        {
            return base.Channel.Consulta_Data_provAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_PICKUPAsync(string key, string fecha, string fecha1, string pickup)
        {
            return base.Channel.Consulta_Data_PICKUPAsync(key, fecha, fecha1, pickup);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_PlacaAsync(string key, string Placa, string fecha)
        {
            return base.Channel.Consulta_Data_PlacaAsync(key, Placa, fecha);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_Placa_fAsync(string key, string Placa)
        {
            return base.Channel.Consulta_Data_Placa_fAsync(key, Placa);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_autoAsync(string key, string Placa)
        {
            return base.Channel.Consulta_Data_autoAsync(key, Placa);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_Data_nit_autoAsync(string key, string NIT)
        {
            return base.Channel.Consulta_Data_nit_autoAsync(key, NIT);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Consulta_clientesAsync(string key, string ruc)
        {
            return base.Channel.Consulta_clientesAsync(key, ruc);
        }
        
        public System.Threading.Tasks.Task<bool> Ingreso_IncidenciasAsync(string key, string Placa, int submotivo, string Observacion, string usuario, string usuario_solucion, string motivo)
        {
            return base.Channel.Ingreso_IncidenciasAsync(key, Placa, submotivo, Observacion, usuario, usuario_solucion, motivo);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Responsable_slaAsync(string key)
        {
            return base.Channel.Responsable_slaAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Tipo_incidenciaAsync(string key)
        {
            return base.Channel.Tipo_incidenciaAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Via_IngresoAsync(string key)
        {
            return base.Channel.Via_IngresoAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Estado_incidenciaAsync(string key)
        {
            return base.Channel.Estado_incidenciaAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> Get_consulta_totalAsync(string key)
        {
            return base.Channel.Get_consulta_totalAsync(key);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_GPS_PLACAAsync(string key, string placa)
        {
            return base.Channel.WS_GPS_PLACAAsync(key, placa);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING1Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING1Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING2Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING2Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING3Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING3Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING4Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING4Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING5Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING5Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING6Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING6Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING7Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING7Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING8Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING8Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING9Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING9Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING10Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING10Async(key, placa, ruc);
        }
        
        public System.Threading.Tasks.Task<WSDLCondelpiData.ArrayOfXElement> WS_RENTING11Async(string key, string placa, string ruc)
        {
            return base.Channel.WS_RENTING11Async(key, placa, ruc);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Service1Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.Service1Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Service1Soap))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.condelpi.com/APC_WEBSERVICE/service1.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.Service1Soap12))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.condelpi.com/APC_WEBSERVICE/service1.asmx");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            Service1Soap,
            
            Service1Soap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.0.2")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
